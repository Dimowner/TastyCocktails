buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

ext.versions = [
		// Android
		targetSdkVersion : 28,
		minSdkVersion    : 16,
		buildtools       : "28.0.3",
		support          : "28.0.0",

		// Components
		constraintlayout : "1.1.3",

		//Rx
		rxJava			  : "2.1.0",

		//RetroFit
		retroFit			  : "2.3.0",

		//OkHttp
		okhttp			  : "3.11.0",

		//Dagger2
		dagger2			  : "2.11",

		//Glide
		glide				  : "4.8.0",

		//Architecture components
		archComp			  : "1.1.0",

		//Room
		room			  : "1.1.1",

		//Timber
		timber			  : "4.7.0",

		//PhotoView
		photoView		  : "2.1.3",

		logInterceptor	  : "3.8.1",

		firebaseCore     : "16.0.7",
		firebaseDatabase : "16.0.6",
]

def versionMajor = 1
def versionMinor = 1
def versionPatch = 6

android {
	compileSdkVersion versions.targetSdkVersion
	defaultConfig {
		applicationId "com.dimowner.tastycocktails"
		minSdkVersion versions.minSdkVersion
		targetSdkVersion versions.targetSdkVersion
		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//		vectorDrawables.useSupportLibrary = true //Disable this flag to prevent app crashes. Without this flag for devices below Android 5.0 will be created png versions of each vector image.
//		multiDexEnabled true
	}

	def keystorePropertiesFile = rootProject.file("keystore.properties")
	def keystoreProperties = new Properties()
	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

	signingConfigs {
		dev {
			storeFile file(keystoreProperties['storeFile'])
			storePassword keystoreProperties['storePassword']
			keyAlias keystoreProperties['keyAlias']
			keyPassword keystoreProperties['keyPassword']
		}
		release {
			storeFile file(keystoreProperties['prodStoreFile'])
			storePassword keystoreProperties['prodStorePassword']
			keyAlias keystoreProperties['prodKeyAlias']
			keyPassword keystoreProperties['prodKeyPassword']
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			useProguard true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
//			minifyEnabled true
//			shrinkResources true
//			useProguard true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			minSdkVersion 16
			applicationId "com.dimowner.tastycocktails.debug"
			targetSdkVersion 27
			signingConfig = signingConfigs.dev
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
		}
		releaseConfig {
			dimension "default"
			signingConfig = signingConfigs.release
			minSdkVersion 16
			applicationId "com.dimowner.tastycocktails"
			targetSdkVersion 27
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	lintOptions {
		abortOnError false
	}

}

repositories {
	mavenCentral()
   maven { url 'https://maven.fabric.io/public' }
	google()
}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if(variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if(variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {

//	implementation "com.mixpanel.android:mixpanel-android:5.+"
	implementation "com.google.android.gms:play-services-gcm:16.1.0"

	// Android
	implementation "com.android.support:support-v4:$versions.support"
	implementation "com.android.support:appcompat-v7:$versions.support"
	implementation "com.android.support:design:$versions.support"
	implementation "com.android.support:support-annotations:$versions.support"
	implementation "com.android.support:support-dynamic-animation:$versions.support"
	implementation "com.android.support:cardview-v7:$versions.support"
	implementation "com.android.support:customtabs:$versions.support"
	implementation "com.android.support:animated-vector-drawable:$versions.support"

	// Android: Components
	implementation "com.android.support.constraint:constraint-layout:$versions.constraintlayout"
	implementation "com.android.support.constraint:constraint-layout-solver:$versions.constraintlayout"

	// Rx
	implementation "io.reactivex.rxjava2:rxjava:$versions.rxJava"
	implementation "io.reactivex.rxjava2:rxandroid:$versions.rxJava"

	//RetroFit
	implementation "com.squareup.retrofit2:retrofit:$versions.retroFit"
	implementation "com.squareup.retrofit2:converter-gson:$versions.retroFit"
	implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retroFit"
	implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
	implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"

	//Dagger2
	implementation "com.google.dagger:dagger:$versions.dagger2"
	annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger2"

	//Glide
	implementation "com.github.bumptech.glide:glide:$versions.glide"
	annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"

	implementation "android.arch.lifecycle:runtime:$versions.archComp"
	implementation "android.arch.lifecycle:extensions:$versions.archComp"
	annotationProcessor "android.arch.lifecycle:compiler:$versions.archComp"

	//Room
	implementation "android.arch.persistence.room:runtime:$versions.room"
	implementation "android.arch.persistence.room:rxjava2:$versions.room"
	annotationProcessor "android.arch.persistence.room:compiler:$versions.room"

	// Firebase
	implementation "com.google.firebase:firebase-core:$versions.firebaseCore"
	implementation "com.google.firebase:firebase-database:$versions.firebaseDatabase"

	//Timber
	implementation "com.jakewharton.timber:timber:$versions.timber"

	//PhotoView
	implementation "com.github.chrisbanes:PhotoView:$versions.photoView"

	androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})

//	implementation 'com.google.android.gms:play-services-ads:17.1.2'

	testImplementation 'junit:junit:4.12'
	testImplementation 'org.mockito:mockito-core:2.23.0'

	// AssertJ
	testImplementation 'org.assertj:assertj-core:3.7.0'

	implementation ('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
		transitive = true
	}

//	implementation 'com.android.support:multidex:1.0.3'
}
